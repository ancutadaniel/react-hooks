{"version":3,"file":"static/webpack/static\\development\\pages\\ImageChangeOnScroll.js.5a5a928c3e5744ff25ad.hot-update.js","sources":["webpack:///./src/ImageToggleOnScroll.js"],"sourcesContent":["import React , { useRef, useEffect, useState } from 'react';\r\n\r\nconst ImageToggleOnScroll = ({primaryImg, secondaryImg}) => {\r\n\r\n    const imageRef = useRef(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('scroll', scrollHandler);\r\n        setInView(isInView());\r\n        setIsLoading(false);\r\n        return ( () => {\r\n            window.removeEventListener('scroll', scrollHandler);\r\n        }, [isLoading]);\r\n    });\r\n\r\n    const [inView, setInView] = useState(false);\r\n\r\n    const isInView = () => {\r\n        if (imageRef.current) {\r\n            const rect = imageRef.current.getBoundingClientRect();\r\n            return rect.top >= 0 && rect.bottom <= window.innerHeight;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const scrollHandler = () => {\r\n        setInView(() => {\r\n            return isInView();\r\n        });\r\n    };\r\n\r\n    return isLoading ? null : (\r\n        <img\r\n            src={inView ? secondaryImg : primaryImg}\r\n            alt=''\r\n            ref={imageRef}\r\n            width=\"200\"\r\n            height=\"200\"\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default ImageToggleOnScroll;\r\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}