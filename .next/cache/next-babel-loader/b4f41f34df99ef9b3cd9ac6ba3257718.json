{"ast":null,"code":"var _jsxFileName = \"E:\\\\#3SS\\\\next-react\\\\src\\\\ImageToggleOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\n\nvar ImageToggleOnScroll = function ImageToggleOnScroll(_ref) {\n  var primaryImg = _ref.primaryImg,\n      secondaryImg = _ref.secondaryImg;\n  var imageRef = useRef(null);\n  useEffect(function () {\n    window.addEventListener('scroll', scrollHandler);\n    return function () {\n      window.removeEventListener('scroll', scrollHandler);\n    };\n  });\n\n  var _useState = useState(false),\n      inView = _useState[0],\n      setInView = _useState[1];\n\n  var isInView = function isInView() {\n    if (imageRef.current) {\n      var rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    return false;\n  };\n\n  var scrollHandler = function scrollHandler() {\n    setInView(function () {\n      return isInView();\n    });\n  };\n\n  return __jsx(\"img\", {\n    src: inView ? secondaryImg : primaryImg,\n    alt: \"\",\n    ref: imageRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["E:/#3SS/next-react/src/ImageToggleOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageToggleOnScroll","primaryImg","secondaryImg","imageRef","window","addEventListener","scrollHandler","removeEventListener","inView","setInView","isInView","current","rect","getBoundingClientRect","top","bottom","innerHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,MAAjB,EAAyBC,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAgC;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;AAExD,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AAEAC,EAAAA,SAAS,CAAE,YAAM;AACbM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,WAAS,YAAM;AACXF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,aAArC;AACH,KAFD;AAGH,GALQ,CAAT;;AAJwD,kBAW5BP,QAAQ,CAAC,KAAD,CAXoB;AAAA,MAWjDS,MAXiD;AAAA,MAWzCC,SAXyC;;AAaxD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,QAAIP,QAAQ,CAACQ,OAAb,EAAsB;AAClB,UAAMC,IAAI,GAAGT,QAAQ,CAACQ,OAAT,CAAiBE,qBAAjB,EAAb;AACA,aAAOD,IAAI,CAACE,GAAL,IAAY,CAAZ,IAAiBF,IAAI,CAACG,MAAL,IAAeX,MAAM,CAACY,WAA9C;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAQA,MAAMV,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBG,IAAAA,SAAS,CAAC,YAAM;AACZ,aAAOC,QAAQ,EAAf;AACH,KAFQ,CAAT;AAGH,GAJD;;AAMA,SACI;AACI,IAAA,GAAG,EAAEF,MAAM,GAAGN,YAAH,GAAkBD,UADjC;AAEI,IAAA,GAAG,EAAC,EAFR;AAGI,IAAA,GAAG,EAAEE,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH,CAnCD;;AAqCA,eAAeH,mBAAf","sourcesContent":["import React , { useRef, useEffect, useState } from 'react';\r\n\r\nconst ImageToggleOnScroll = ({primaryImg, secondaryImg}) => {\r\n\r\n    const imageRef = useRef(null);\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('scroll', scrollHandler);\r\n        return ( () => {\r\n            window.removeEventListener('scroll', scrollHandler);\r\n        });\r\n    });\r\n\r\n    const [inView, setInView] = useState(false);\r\n\r\n    const isInView = () => {\r\n        if (imageRef.current) {\r\n            const rect = imageRef.current.getBoundingClientRect();\r\n            return rect.top >= 0 && rect.bottom <= window.innerHeight;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const scrollHandler = () => {\r\n        setInView(() => {\r\n            return isInView();\r\n        });\r\n    };\r\n\r\n    return (\r\n        <img\r\n            src={inView ? secondaryImg : primaryImg}\r\n            alt=''\r\n            ref={imageRef}\r\n\r\n        />\r\n    );\r\n};\r\n\r\nexport default ImageToggleOnScroll;\r\n"]},"metadata":{},"sourceType":"module"}